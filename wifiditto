#!/bin/bash

if [ "$EUID" -ne 0 ]
  then echo "Please run as root."
  exit
fi

if [ $# -ge 2 ]; then

    interface=$1
    interfacemon="${interface}mon"

    essid=$2

    interfacecheck=$(ip a | grep "$interface")

    if [ $? -ne 0 ] ; then
        echo "Interface '$interface' does not exist! Exiting..."
	exit
    else
        interfacecheck=$(echo $interfacecheck | grep "UP")
	if [ $? -ne 0 ] ; then
            echo "Interface '$interface' is not up! Exiting..."
            exit
        fi
    fi

    # Get date and time (for file names)
    dt=$(date '+%Y%m%d-%H%M')

    # set wireless card to monitor mode
    echo -n "Setting $interface to monitor mode... "
    airmon-ng start $interface &> /dev/null
    echo "Done"

    # start collecting macs
    echo "Starting airodump-ng to check clients connected to $essid (ctrl-c to stop)... "
    sleep 3
    airodump-ng $interfacemon -w harvested/$dt -o csv -a #--essid "$essid" # -b a # remove first hash if using 5ghz. will implement a switch later

    # Disable monitor mode
    echo -n "Stopping monitor mode on $interface... "
    airmon-ng stop $interfacemon &> /dev/null
    echo "Done"

    # strip the associated mac addresses from airodump csv file
    # it's in python because why not, please dont judge me

    echo -n "Stripping macs from log file... "
    python3 modules/stripmacs.py ../harvested/$dt-01.csv ../harvested/$dt.macs "$essid"
    echo "Done"

    # clean up files generated by airodump
    echo -n "Cleaning up csv files... "
    find harvested -type f -not -name '*.macs' -delete
    echo "Done"

    # Wait for wifi to associate
    echo -n "Waiting for wireless connection... "
    	sleep 3
	while true; do
        # testing...
        LC_ALL=$(nmcli -t -f DEVICE,STATE dev | grep -q "^$interface:connected$")
        if [ $? -eq 0 ]; then
            break
        else
            # not connected, sleeping for a second
            sleep 1
        fi
    done
    echo "Connected."

    # start testing macs
    echo "About to start testing access..."
    clear
    sudo modules/check_macs harvested/$dt.macs $(wc -l < harvested/$dt.macs) $interface

else

    echo ""
    echo "Incorrect number of arguments!"
    echo ""
    echo "Useage:"
    echo "$0 {interface name} {target AP name}"
    echo ""

fi
